import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  await page.goto('https://staging.vizzy.com/');
  await page.getByRole('button', { name: 'Log in' }).click();
  await page.getByLabel('Email').fill('vension8@mailinator.com');
  await page.getByLabel('Password').click();
  await page.getByLabel('Password').fill('Cavemancoffee123@');
  await page.getByRole('button', { name: 'Sign in' }).click();
  await page.getByRole('link', { name: 'Settings' }).click();
  await page.getByRole('link', { name: 'Create & manage jobs' }).click();
  await page.getByRole('link', { name: 'Create a new job' }).click();
  await page.getByPlaceholder('New job').click();
  await page.getByPlaceholder('New job').fill('automation3');
  await page.getByLabel('Code *Required for job URL').click();
  await page.getByLabel('Code *Required for job URL').fill('323s');
  await page.getByLabel('Applications open from *').click();
  await page.getByLabel('Applications open from *').fill('22 / 10 / 2003');
  await page.locator('span').filter({ hasText: 'Select' }).first().click();
  await page.getByLabel('BOTH', { exact: true }).click();
  await page.locator('span').filter({ hasText: 'Both Internal & External' }).click();
  await page.getByLabel('EXTERNAL', { exact: true }).click();
  await page.locator('span').filter({ hasText: 'External only' }).click();
  await page.getByLabel('INTERNAL', { exact: true }).click();
  await page.getByPlaceholder('Add a description for').click();
  await page.getByPlaceholder('Add a description for').fill('Nice');
  await page.getByPlaceholder('Add requirements for the role').click();
  await page.getByPlaceholder('Add requirements for the role').fill('Nice');
  await page.locator('span').filter({ hasText: 'Select' }).first().click();
  await page.getByLabel('INTERNSHIP', { exact: true }).click();
  await page.locator('span').filter({ hasText: 'Internship' }).click();
  await page.getByLabel('FULL_TIME').click();
  await page.locator('span').filter({ hasText: 'Full-time' }).click();
  await page.getByLabel('PART_TIME').click();
  await page.locator('span').filter({ hasText: 'Part-time' }).click();
  await page.getByLabel('CONTRACT', { exact: true }).click();
  await page.locator('span').filter({ hasText: 'Contract' }).click();
  await page.getByLabel('FREELANCE', { exact: true }).click();
  await page.locator('label').filter({ hasText: 'Remote' }).locator('span').first().click();
  await page.locator('label').filter({ hasText: 'Hybrid' }).locator('span').first().click();
  await page.locator('label').filter({ hasText: 'Onsite' }).click();
  await page.getByLabel('Expected start date').click();
  await page.getByLabel('Expected start date').fill('22 / 10 / 2026');
  await page.getByLabel('Country *').click();
  await page.getByLabel('Country *').fill('Cambodia');
  await page.getByLabel('City').click();
  await page.getByLabel('City').fill('Siem reap');
  await page.getByRole('button', { name: 'Allow all' }).click();
  await page.getByRole('button', { name: 'Continue editing' }).click();
  await page.locator('span').filter({ hasText: 'Select' }).first().click();
  await page.getByLabel('CAD', { exact: true }).click();
  await page.locator('span').filter({ hasText: 'CAD' }).click();
  await page.getByLabel('JPY', { exact: true }).click();
  await page.locator('span').filter({ hasText: 'JPY' }).click();
  await page.getByLabel('GBP', { exact: true }).click();
  await page.locator('span').filter({ hasText: 'GBP' }).click();
  await page.getByLabel('EUR', { exact: true }).click();
  await page.locator('span').filter({ hasText: 'EUR' }).click();
  await page.getByLabel('USD', { exact: true }).click();
  await page.locator('span').filter({ hasText: 'Select' }).click();
  await page.getByLabel('HOURLY', { exact: true }).click();
  await page.locator('span').filter({ hasText: 'Hourly' }).click();
  await page.getByLabel('DAILY', { exact: true }).click();
  await page.locator('span').filter({ hasText: 'Daily' }).click();
  await page.getByLabel('MONTHLY', { exact: true }).click();
  await page.locator('span').filter({ hasText: 'Monthly' }).click();
  await page.getByLabel('YEARLY').click();
  await page.getByLabel('Minimum salary$').click();
  await page.getByLabel('Minimum salary$').fill('2323');
  await page.getByLabel('Maximum salary$').click();
  await page.getByLabel('Maximum salary$').fill('33333');
  await page.getByRole('main').locator('div').filter({ hasText: 'Job details SaveThis section' }).nth(2).click();
  await page.getByRole('button', { name: 'Save' }).click();
});